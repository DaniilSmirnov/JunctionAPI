{"version":3,"sources":["panels/StartScreen.js","App.js","index.js"],"names":["StartScreen","props","state","activePanel","categories","authToken","number","console","log","this","id","map","c","className","React","Component","App","platform","go","e","setState","currentTarget","dataset","to","updateData","value1","value2","groupName","groupId","saveOffsets","offset1","offset2","activeStory","fetchedUser","onStoryChange","bind","connect","subscribe","detail","type","data","access_token","send","response","story","scheme","tabbar","onClick","selected","data-story","text","ReactDOM","render","document","getElementById"],"mappings":"soBAwDeA,G,mBArCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEAC,MAAQ,CACnBC,YAAa,cACbC,WAAY,EAAKH,MAAMG,WACvBC,UAAW,EAAKJ,MAAMI,UACtBC,OAAQ,GAPY,E,iFAarBC,QAAQC,IAAIC,KAAKR,MAAMG,c,+BAOvB,OAFCG,QAAQC,IAAIC,KAAKP,MAAME,YACvBG,QAAQC,IAAIC,KAAKP,MAAMG,WAEvB,kBAAC,IAAD,CAAOK,GAAG,eACTD,KAAKP,MAAME,WAAWO,KAAI,SAACC,GAAD,OAC3B,yBAAKC,UAAU,QACd,yBAAKA,UAAU,QACf,yBAAKA,UAAU,yB,GA3BOC,IAAMC,YC+EjBC,GAjFAC,c,YAGd,WAAahB,GAAQ,IAAD,8BACnB,4CAAMA,KAyCLiB,GAAK,SAACC,GACP,EAAKC,SAAS,CAAEjB,YAAagB,EAAEE,cAAcC,QAAQC,MA3ClC,EA8CnBC,WAAa,SAACC,EAAQC,GACrB,EAAKN,SAAS,CAACO,UAAWF,EAC1BG,QAAQF,KAhDU,EAmDnBG,YAAc,SAACJ,EAAQC,GACtB,EAAKN,SAAS,CAACU,QAASL,EACvBM,QAAQL,KAlDV,EAAKxB,MAAQ,CACZ8B,YAAa,cACbC,YAAa,KACb5B,UAAW,KACXD,WAAW,CAAC,EAAE,IAEf,EAAK8B,cAAgB,EAAKA,cAAcC,KAAnB,gBATF,E,iFAYA,IAAD,OAClBC,IAAQC,WAAU,SAAClB,GAClB,OAAQA,EAAEmB,OAAOC,MAChB,IAAK,4BACJ,EAAKnB,SAAS,CAAEa,YAAad,EAAEmB,OAAOE,OACtCjC,QAAQC,IAAI,QACZ,MACD,IAAK,8BACJD,QAAQC,IAAI,SACZ,EAAKY,SAAS,CAAEf,UAAWc,EAAEmB,OAAOE,KAAKC,eACzCL,IAAQM,KAAK,wBAAyB,CAAC,OAAU,yBAA0B,WAAc,SAAU,OAAU,CAAC,MAAS,KAAM,EAAI,QAAS,aAAgB,EAAKxC,MAAMG,aACrK,MACD,IAAK,8BACJE,QAAQC,IAAI,QACZ,EAAKY,SAAS,CAAChB,WAAae,EAAEmB,OAAOE,KAAKG,WAC1CpC,QAAQC,IAAI,EAAKN,MAAME,YACvB,MACD,QACCG,QAAQC,IAAI,SAASW,EAAEmB,OAAOE,UAGjCJ,IAAQM,KAAK,gBACbN,IAAQM,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,a,oCAIlDvB,GAChBV,KAAKW,SAAS,CAAEY,YAAab,EAAEE,cAAcC,QAAQsB,U,+BAmBpD,OADArC,QAAQC,IAAIC,KAAKP,MAAMG,WAEtB,kBAAC,IAAD,CAAMwC,OAAQpC,KAAKP,MAAM2C,OAAQb,YAAavB,KAAKP,MAAM8B,YAAac,OACtE,kBAAC,IAAD,KACC,kBAAC,IAAD,CACAC,QAAStC,KAAKyB,cACdc,SAAqC,gBAA3BvC,KAAKP,MAAM8B,YACrBiB,aAAW,cACXC,KAAK,0DACJ,kBAAC,IAAD,SAIF,kBAAC,IAAD,CAAMxC,GAAG,cAAcP,YAAY,eAClC,kBAAC,EAAD,CAAaO,GAAG,cAAcuB,YAAaxB,KAAKP,MAAM+B,YAAa7B,WAAYK,KAAKP,MAAME,WAAYC,UAAWI,KAAKP,MAAMG,kB,GAxE/GS,IAAMC,YCAxBoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2bc5c681.chunk.js","sourcesContent":["import React, {Component, useRef} from \"react\";\nimport Carousel from 'nuka-carousel';\nimport { motion, useMotionValue, useTransform } from \"framer-motion\"\nimport PropTypes from 'prop-types';\nimport \"../styles/styles.css\"\nimport connect from '@vkontakte/vk-connect';\nimport fetchJsonp from 'fetch-jsonp';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n//import {data} from '../data/categories';\nimport Swipe from 'react-easy-swipe';\n\nclass StartScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n         this.state = {\n\t\t\tactivePanel: 'StartScreen',\n\t\t\tcategories: this.props.categories,\n\t\t\tauthToken: this.props.authToken,\n\t\t\tnumber: 0\n\t\t}\n\t\t\n\t}\n\t\n\tcomponentDidMount(){\n\t\tconsole.log(this.props.categories);\n\t}\n\n    render(){\n\t\t\n\t\t{console.log(this.state.categories)}\n\t\t{console.log(this.state.authToken)}\n\t\treturn (\n\t\t\t<Panel id=\"StartScreen\">\n\t\t\t{this.state.categories.map((c)=>(\n\t\t\t<div className=\"deck\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"cardHeader\">\n\t\t\t\t\t{/*{this.state.c.name}*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t))}\n\t\t\t</Panel>\t\n\n\t\t);\n    }\n}\n\nexport default StartScreen;\n","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport connect from '@vkontakte/vk-connect';\n\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28RecentOutline from '@vkontakte/icons/dist/28/recent_outline';\nimport Icon28InfoOutline from '@vkontakte/icons/dist/28/info_outline';\nimport Icon28Settings from '@vkontakte/icons/dist/28/settings';\n\nimport StartScreen from './panels/StartScreen';\n\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport {Epic, Tabbar, TabbarItem} from '@vkontakte/vkui';\n\nconst osname = platform();\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tactiveStory: 'StartScreen',\n\t\t\tfetchedUser: null,\n\t\t\tauthToken: null,\n\t\t\tcategories:[4,5]\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t}\n\t\n\tcomponentDidMount(){\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data});\n\t\t\t\t\tconsole.log('test');\n\t\t\t\t\tbreak;\t\n\t\t\t\tcase 'VKWebAppAccessTokenReceived':\n\t\t\t\t\tconsole.log('test2');\n\t\t\t\t\tthis.setState({ authToken: e.detail.data.access_token });\n\t\t\t\t\tconnect.send(\"VKWebAppCallAPIMethod\", {\"method\": \"junction.getCategories\", \"request_id\": \"32test\", \"params\": {\"count\": \"10\", \"v\":\"5.103\", \"access_token\": this.state.authToken}});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppCallAPIMethodResult':\n\t\t\t\t\tconsole.log('tes3');\n\t\t\t\t\tthis.setState({categories : e.detail.data.response});\n\t\t\t\t\tconsole.log(this.state.categories);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"Data: \"+e.detail.data);\n\t\t\t}\n\t\t});\t\n\t\tconnect.send('VKWebAppInit');\n\t\tconnect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7210275, \"scope\": \"groups\"});\n\n\t}\n\n\t  onStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t  }\n\n\t  go = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t\t};\n\n\t\tupdateData = (value1, value2) => {\n\t\t\tthis.setState({groupName: value1,\n\t\t\tgroupId:value2})\n\t\t}\n\n\t\tsaveOffsets = (value1, value2) => {\n\t\t\tthis.setState({offset1: value1,\n\t\t\t\toffset2:value2})\n\t\t}\n\n\t  render () {\n\t\t\tconsole.log(this.state.authToken);\n\t\t\treturn (\n\t\t\t\t<Epic scheme={this.state.scheme} activeStory={this.state.activeStory} tabbar={\n\t\t\t\t<Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\tselected={this.state.activeStory === 'StartScreen'}\n\t\t\t\t\tdata-story=\"StartScreen\"\n\t\t\t\t\ttext=\"Категории\"\n\t\t\t\t\t><Icon28Newsfeed /></TabbarItem>\n\t\t\t\t\t\t\n\t\t\t\t</Tabbar>\n\t\t\t\t}>\n\t\t\t\t<View id=\"StartScreen\" activePanel=\"StartScreen\">\n\t\t\t\t\t<StartScreen id=\"StartScreen\" fetchedUser={this.state.fetchedUser} categories={this.state.categories} authToken={this.state.authToken}/>\n\t\t\t\t</View>\n\t\t\t\t\n\t\t\t\t</Epic>\n\t\t\t)\n\t  }\n\t}\nexport default App;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\n//connect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}